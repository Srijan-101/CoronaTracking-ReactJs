{"version":3,"sources":["components/Cards/Cards.module.css","Api/index.js","components/Cards/Cards.js","components/Charts/Chart.js","components/CountryPicker/CountryPicker.js","components/Footer/Footer.js","App.js","index.js","components/Footer/Footer.module.css","components/Charts/Chart.module.css","images/corona.png","images/image.png","components/CountryPicker/CountryPicker.module.css","images/person.png","App.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","modifieddata","fetchDailyData","map","date","reportDate","total","console","log","fCountries","countries","name","Cards","handlecountryChange","className","styles","container","box","src","image","update","corona","Grid","justify","spacing","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","start","end","value","duration","separator","Date","toDateString","Chart","useState","dailydata","setDailydata","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","fetchCountries","setFetchCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","i","key","Footer","person","foot","App","setData","fetcheddata","fetchedData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47171f3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"box\":\"Cards_box__2SJMX\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"corona\":\"Cards_corona__2FF2H\",\"update\":\"Cards_update__3cXIJ\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n\n  let changeableUrl = url;\n       if(country){\n         changeableUrl = `${url}/countries/${country}`;\n       } \n\n    try {\n    const {data : {confirmed , recovered , deaths , lastUpdate }}  = await axios.get(changeableUrl);\n\n    const modifieddata = {confirmed,recovered,deaths,lastUpdate}\n\n    return modifieddata;\n\n    }catch(error){\n\n    }\n}\n\nexport const fetchDailyData = async () => {\n  \n    \n    try {\n      const { data } = await axios.get(`${url}/daily`);\n  \n      return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  export const fCountries = async () => {\n    try {\n      const { data: { countries } } = await axios.get(`${url}/countries`);\n  \n      return (countries.map((country) => country.name));\n\n    } catch (error) {\n      return error;\n    }\n  };","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\n\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nimport corona from '../../images/corona.png'\nimport image from '../../images/image.png'\n\nimport  {CountryPicker } from '../index';\nimport { fetchData } from '../../Api';\n\n\nconst Cards = ({ data: { data } ,handlecountryChange}) => {\n\n    if (!data) {\n        return '....loading';\n    }\n\n    \n\n    return (\n        <div className={styles.container}>\n             <div className={styles.box}>\n                 <img src={image} className ={styles.update}/>\n                 <img src={corona} className={styles.corona}/>\n                 \n             </div>\n\n             <Grid container   justify=\"center\">\n             \n             <CountryPicker handlecountryChange={handlecountryChange}/>\n             \n             </Grid>\n\n\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card}  xs ={11} md={3} className = {cx(styles.card,styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography varient=\"h5\"> <CountUp start={0} end={data.confirmed.value} duration={2.5} separator=\",\"/></Typography>\n                        <Typography color=\"textSecondary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid> \n                <Grid item component={Card} xs ={11} md={3} className = {cx(styles.card,styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography varient=\"h5\"><CountUp start={0} end={data.recovered.value} duration={2.5} separator=\",\"/></Typography>\n                        <Typography color=\"textSecondary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of recoveries cases from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs ={11} md={3} className = {cx(styles.card,styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography varient=\"h5\"><CountUp start={0} end={data.deaths.value} duration={2.5} separator=\",\"/></Typography>\n                        <Typography color=\"textSecondary\">{new Date(data.lastUpdate).toDateString()}</Typography>\n                        <Typography varient=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Cards;","import React ,{useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../Api';\nimport {Line , Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart  = ({ data: { data } ,country}) => {\n    const [dailydata,setDailydata] = useState({}); \n\n    useEffect(() =>{\n          const fetchAPI = async () => {\n                 setDailydata(await fetchDailyData());\n          }\n          fetchAPI();\n    },[])\n    \n    const lineChart = (\n        dailydata[0] ? (\n          <Line\n            data={{\n              labels: dailydata.map(({ date }) => date),\n              datasets: [{\n                data: dailydata.map((data) => data.confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n              }, {\n                data: dailydata.map((data) => data.deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n              },\n              ],\n            }}\n          />\n        ) : null\n      );\n\n      const barChart = (\n        data ? (\n          <Bar\n            data={{\n              labels: ['Infected', 'Recovered', 'Deaths'],\n              datasets: [\n                {\n                  label: 'People',\n                  backgroundColor: ['#4B7BF5', '#10BC10', '#DF362D'],\n                  data: [data.confirmed.value, data.recovered.value, data.deaths.value],\n                },\n              ],\n            }}\n            options={{\n              legend: { display: false },\n              title: { display: true, text: `Current state in ${country}` },\n            }}\n          />\n        ) : null\n      );\n    \n\n    return (\n        <div className = {styles.container}> \n          {country ? barChart : lineChart}\n          <div className={styles.box}></div>\n        </div>\n        \n    )\n}\n\nexport default Chart;","import React,{useState,useEffect} from 'react';\nimport {NativeSelect,FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fCountries} from '../../Api/index';\n\n\n\n\nconst CountryPicker  = ({handlecountryChange}) => {\n\n    const[fetchCountries,setFetchCountries] = useState([]);\n\n    useEffect(() => {\n         const fetchCountries = async() => {\n              setFetchCountries(await fCountries());\n         }\n\n         fetchCountries();\n    },[setFetchCountries]);\n\n\n   \n\n    return (\n            <FormControl className={styles.formControl}>\n                <NativeSelect default=\"\" onChange = {(e) => handlecountryChange(e.target.value)}>\n                     <option value=\"\">Global</option>\n                     {fetchCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n                </NativeSelect>\n            </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\nimport styles from \"./Footer.module.css\";\nimport {Typography} from '@material-ui/core';\nimport person from '../../images/person.png'\n\nconst Footer = () => {\n    return (\n        <div className={styles.container} >\n              <div className={styles.box} >\n                  <h5>Site developed by: Srijan kc</h5>\n                  <img src={person} className={styles.foot}/>\n                   \n               <br/>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React , {useEffect, useState} from 'react';\n//components \nimport {Cards,Charts,Footer} from './components';\nimport styles from './App.module.css';\nimport  { fetchData } from './Api';\n\nconst App = () => {\n   \n    const [data,setData] = useState({\n      country :''\n    });\n\n    useEffect(() => {\n      async function data(){\n        const fetcheddata = await fetchData();\n        setData({data : fetcheddata});\n      }\n      data(); \n},[])\n\nconst handlecountryChange = async (country) => {\n  const fetchedData = await fetchData(country);\n  setData({data : fetchedData ,country : country });\n}\n\n\n    return (\n        <div className ={styles.container}>\n            \n             <Cards data ={data} handlecountryChange={handlecountryChange} />\n             <Charts data={data} country={data.country}/>\n             <Footer/>\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\",\"box\":\"Footer_box__lalu4\",\"foot\":\"Footer_foot__2TOfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\"};","module.exports = __webpack_public_path__ + \"static/media/corona.60771ccd.png\";","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/person.ab7a04bb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}